<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd"
      profile="redis">

    <description>Redis配置</description>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxActive}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true" p:hostName="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
          p:database="${redis.default.db}" p:timeout="${redis.timeout}" p:poolConfig-ref="poolConfig"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="redisSessionDAO" class="com.d1m.wechat.security.shiro.RedisCacheSessionDAO">
        <property name="redisTemplate" ref="redisTemplate"/>
        <property name="uncacheChannel" value="${redis.topic.shiro.uncache}"/>
    </bean>

    <!--redis的消息订阅容器-->
    <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="messageListeners">
            <map>
                <entry>
                    <key>
                        <bean class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
                            <constructor-arg ref="redisSessionDAO"/>
                            <property name="serializer">
                                <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
                            </property>
                        </bean>
                    </key>
                    <bean class="org.springframework.data.redis.listener.ChannelTopic" >
                        <constructor-arg value="${redis.topic.shiro.uncache}"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
</beans>